@model VIP_Parking.ViewModels.ReservationVM
@{
    ViewBag.Title = "Edit";
}

<div>
    @Html.ActionLink("Back to Reservations", "Index")
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Reserv_ID)
        @Html.Partial("_Form")
        <div class="form-group">
            @Html.LabelFor(model => model.GateCode, "Gate Code", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.GateCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Lots, "Lots Allowed", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class=" col-md-8">
                <table>
                    <tr>
                         @{
                            int cnt = 0;
                            List<VIP_Parking.ViewModels.AllowedLotsVM> lots = ViewBag.Lots;

                            foreach (var lot in lots)
                            {
                                if (cnt++ % 3 == 0)
                                {
                                    @:</tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                        name="selectedLots"
                                        value="@lot.Lot_ID"
                                        @(Html.Raw(lot.Allowed ? "checked=\"checked\"" : "")) />
                                        @lot.Lot_Name
                                @:</td>
                            }
                            @:</tr>
                         }
                 </table>
             </div>
        </div>
        <div class="form-group">
            <div>
                @if (Model.Approved == 0)
                {
                    <button type="submit" id="approve" name="Approve" value="1" class="btn btn-default green">Approve</button>
                    <button type="submit" id="decline" name="Approve" value="2" class="btn btn-default red">Decline</button>
                }
                else if (Model.Approved == 1)
                {
                    <button type="submit" id="approve" name="Approve" value="1" class="btn btn-default green">Resend Approval</button>
                    <button type="submit" id="decline" name="Approve" value="2" class="btn btn-default red">Decline</button>
                }
                else if (Model.Approved == 2)
                {
                    <button type="submit" id="approve" name="Approve" value="1" class="btn btn-default green">Approve</button>
                }
                <button type="submit" name="Approve" id="cancel" value="0" class="btn btn-default yellow">Cancel</button>
            </div>
        </div>        
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}